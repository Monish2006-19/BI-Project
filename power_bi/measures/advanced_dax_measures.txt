
# Advanced DAX Measures for Rapido Transportation Dashboard
# CORRECTED VERSION - Single Line Format for Easy Copy-Paste
# Copy these measures by batch into Power BI Desktop

## BATCH 1: FactRides (Main Business Measures)
Total Revenue = SUM(FactRides[final_price])
Total Base Revenue = SUM(FactRides[base_price])
Dynamic Revenue = SUM(FactRides[final_price]) - SUM(FactRides[base_price])
Average Revenue Per Ride = AVERAGE(FactRides[final_price])
Revenue Per KM = DIVIDE(SUM(FactRides[final_price]), SUM(FactRides[distance_km]))
Total Trips = COUNTROWS(FactRides)
Average Distance = AVERAGE(FactRides[distance_km])
Total Distance = SUM(FactRides[distance_km])
Average Multiplier = AVERAGE(FactRides[surge_multiplier])
Dynamic Revenue Percentage = DIVIDE(SUM(FactRides[final_price]) - SUM(FactRides[base_price]), SUM(FactRides[final_price])) * 100
High Multiplier Trips = CALCULATE(COUNTROWS(FactRides), FactRides[surge_multiplier] > 1.2)
High Multiplier Trip Percentage = DIVIDE(CALCULATE(COUNTROWS(FactRides), FactRides[surge_multiplier] > 1.2), COUNTROWS(FactRides)) * 100
Average Wait Time = AVERAGE(FactRides[waiting_time_minutes])
Route Revenue Rank = RANKX(ALL(FactRides[route]), CALCULATE(SUM(FactRides[final_price])),, DESC)

## BATCH 2: DimTime (Time Intelligence Measures)
Revenue MTD = TOTALMTD(SUM(FactRides[final_price]), DimTime[date])
Revenue QTD = TOTALQTD(SUM(FactRides[final_price]), DimTime[date])
Revenue YTD = TOTALYTD(SUM(FactRides[final_price]), DimTime[date])
Revenue Previous Month = CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))
Revenue Growth MoM = IF(NOT ISBLANK(CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))), DIVIDE(SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])), CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))) * 100, BLANK())
Weekend Revenue = CALCULATE(SUM(FactRides[final_price]), DimTime[is_weekend] = TRUE)
Weekday Revenue = CALCULATE(SUM(FactRides[final_price]), DimTime[is_weekend] = FALSE)
Weekend vs Weekday Premium = DIVIDE(DIVIDE(CALCULATE(SUM(FactRides[final_price]), DimTime[is_weekend] = TRUE), CALCULATE(COUNTROWS(FactRides), DimTime[is_weekend] = TRUE)), DIVIDE(CALCULATE(SUM(FactRides[final_price]), DimTime[is_weekend] = FALSE), CALCULATE(COUNTROWS(FactRides), DimTime[is_weekend] = FALSE))) - 1

## BATCH 3: DimHour (Rush Hour Measures)
Rush Hour Revenue = CALCULATE(SUM(FactRides[final_price]), DimHour[is_rush_hour] = TRUE)
Rush Hour Trips = CALCULATE(COUNTROWS(FactRides), DimHour[is_rush_hour] = TRUE)
Morning Rush Revenue = CALCULATE(SUM(FactRides[final_price]), DimHour[hour] IN {8, 9})
Evening Rush Revenue = CALCULATE(SUM(FactRides[final_price]), DimHour[hour] IN {17, 18})
Hour Revenue Rank = RANKX(ALL(DimHour[hour]), CALCULATE(SUM(FactRides[final_price]), VALUES(DimHour[hour])),, DESC)
Peak Hour Indicator = IF(CALCULATE(COUNTROWS(FactRides), DimHour[hour] = SELECTEDVALUE(DimHour[hour])) = MAXX(ALL(DimHour), CALCULATE(COUNTROWS(FactRides), DimHour[hour] = EARLIER(DimHour[hour]))), "🔥 Peak Hour", IF(SELECTEDVALUE(DimHour[is_rush_hour]), "⚡ Rush Hour", "📊 Regular Hour"))
Revenue Trend Indicator = SWITCH(TRUE(), ISBLANK(CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))), "📊 New Period", SUM(FactRides[final_price]) > CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])) * 1.1, "📈 Strong Growth", SUM(FactRides[final_price]) > CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])) * 1.05, "↗️ Growing", SUM(FactRides[final_price]) > CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])) * 0.95, "➡️ Stable", SUM(FactRides[final_price]) > CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])) * 0.9, "↘️ Declining", "📉 Significant Decline")

## BATCH 4: DimWeather (Weather Analysis Measures)
Rain Revenue = CALCULATE(SUM(FactRides[final_price]), DimWeather[weather_condition] = "Rain")
Clear Revenue = CALCULATE(SUM(FactRides[final_price]), DimWeather[weather_condition] = "Clear")
Thunderstorm Revenue = CALCULATE(SUM(FactRides[final_price]), DimWeather[weather_condition] = "Thunderstorm")
Weather Premium = DIVIDE(CALCULATE(AVERAGE(FactRides[final_price]), DimWeather[weather_condition] = "Rain"), CALCULATE(AVERAGE(FactRides[final_price]), DimWeather[weather_condition] = "Clear")) - 1
Storm Revenue Boost = DIVIDE(CALCULATE(AVERAGE(FactRides[final_price]), DimWeather[weather_condition] = "Thunderstorm"), AVERAGE(FactRides[final_price])) - 1
Weather Impact Summary = SELECTEDVALUE(DimWeather[weather_condition]) & " - " & FORMAT(CALCULATE(AVERAGE(FactRides[surge_multiplier]), DimWeather[weather_condition] = SELECTEDVALUE(DimWeather[weather_condition])), "0.00") & "x multiplier"
Multiplier Level Color = SWITCH(TRUE(), AVERAGE(FactRides[surge_multiplier]) >= 2, "#FF0000", AVERAGE(FactRides[surge_multiplier]) >= 1.5, "#FF8C00", AVERAGE(FactRides[surge_multiplier]) >= 1.2, "#FFD700", "#00FF00")
Revenue Performance Color = SWITCH(TRUE(), DIVIDE(SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])), CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))) * 100 > 10, "#00AA00", DIVIDE(SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])), CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))) * 100 > 5, "#90EE90", DIVIDE(SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])), CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))) * 100 > -5, "#FFFF00", DIVIDE(SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date])), CALCULATE(SUM(FactRides[final_price]), PREVIOUSMONTH(DimTime[date]))) * 100 > -10, "#FFA500", "#FF0000")

## BATCH 5: DimVehicle (Vehicle Performance Measures)
Bike Revenue = CALCULATE(SUM(FactRides[final_price]), DimVehicle[vehicle_type] = "bike")
Auto Revenue = CALCULATE(SUM(FactRides[final_price]), DimVehicle[vehicle_type] = "auto")
Cab Revenue = CALCULATE(SUM(FactRides[final_price]), DimVehicle[vehicle_type] = "cab")
Vehicle Revenue Share = DIVIDE(CALCULATE(SUM(FactRides[final_price]), VALUES(DimVehicle[vehicle_type])), SUM(FactRides[final_price])) * 100
Service Quality Score = SWITCH(TRUE(), AVERAGE(FactRides[waiting_time_minutes]) <= 2, 100, AVERAGE(FactRides[waiting_time_minutes]) <= 3, 90, AVERAGE(FactRides[waiting_time_minutes]) <= 4, 80, AVERAGE(FactRides[waiting_time_minutes]) <= 5, 70, AVERAGE(FactRides[waiting_time_minutes]) <= 7, 60, 50)

## BATCH 6: FactRides (VIT University Analysis)
VIT Revenue = CALCULATE(SUM(FactRides[final_price]), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT")))
VIT Trips = CALCULATE(COUNTROWS(FactRides), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT")))
VIT Revenue Share = DIVIDE(CALCULATE(SUM(FactRides[final_price]), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT"))), SUM(FactRides[final_price])) * 100
Non-VIT Revenue = SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT")))
VIT vs Non-VIT Ratio = DIVIDE(CALCULATE(SUM(FactRides[final_price]), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT"))), SUM(FactRides[final_price]) - CALCULATE(SUM(FactRides[final_price]), OR(CONTAINSSTRING(FactRides[from_location], "VIT"), CONTAINSSTRING(FactRides[to_location], "VIT"))))
Trips Under 5 Min Wait = CALCULATE(COUNTROWS(FactRides), FactRides[waiting_time_minutes] <= 5)
Service Quality Percentage = DIVIDE(CALCULATE(COUNTROWS(FactRides), FactRides[waiting_time_minutes] <= 5), COUNTROWS(FactRides)) * 100

## IMPLEMENTATION NOTES:
# - All measures are single-line format for easy copy-paste
# - No circular dependencies - uses direct column references
# - No reserved words - eliminated "Surge" conflicts
# - Each batch can be copied and pasted together
# - Test each batch before proceeding to next
